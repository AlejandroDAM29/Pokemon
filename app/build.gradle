

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "org.sonarqube" version "3.5.0.2730"
    id('kotlin-kapt')
    id('com.google.dagger.hilt.android')
}

configurations.all {
    resolutionStrategy { force 'androidx.core:core-ktx:1.6.0' }
}

android {
    compileSdk 33
    defaultConfig {
        applicationId "ae.mycourse.pokemon"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    viewBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures{
        viewBinding = true
    }
}

dependencies {

    //SplashScreen library
    implementation 'androidx.core:core-splashscreen:1.0.0'

    //Room
    implementation("androidx.room:room-runtime:2.4.3")
    annotationProcessor("androidx.room:room-compiler:2.4.3")

    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:2.4.3")

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:2.4.3")

    // optional - RxJava2 support for Room
    implementation("androidx.room:room-rxjava2:2.4.3")

    // optional - RxJava3 support for Room
    implementation("androidx.room:room-rxjava3:2.4.3")

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation("androidx.room:room-guava:2.4.3")

    // optional - Test helpers
    testImplementation("androidx.room:room-testing:2.4.3")

    // optional - Paging 3 Integration
    implementation("androidx.room:room-paging:2.4.3")

    // Java language implementation
    implementation("androidx.navigation:navigation-fragment-ktx:2.5.3")
    implementation("androidx.navigation:navigation-ui-ktx:2.5.3")

    // Kotlin
    implementation("androidx.navigation:navigation-fragment-ktx:2.5.3")
    implementation("androidx.navigation:navigation-ui-ktx:2.5.3")

    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:2.5.3")

    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:2.5.3")

    // Jetpack Compose Integration
    implementation("androidx.navigation:navigation-compose:2.5.3")

    //Library to put sliders
    implementation 'com.github.smarteist:autoimageslider:1.3.9'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    //Android Material
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    //Retrofit y Gson
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    // Coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4")
    // Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'
    // Fragment
    implementation "androidx.fragment:fragment-ktx:1.5.5"
    // Activity
    implementation "androidx.activity:activity-ktx:1.6.1"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"
    // Hilt
    implementation("com.google.dagger:hilt-android:2.44")
    kapt("com.google.dagger:hilt-android-compiler:2.44")

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

apply plugin: "org.sonarqube"
sonarqube {
    properties {
        property "sonar.projectName", "Pokemon"
        property "sonar.host.url", "http://localhost:9377"
        property "sonar.tests", ["src/test/java"]
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.sources", "src/main/java"
        property "sonar.login", "admin"
        property "sonar.password", "morodo2"
    }
}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}